{"version":3,"sources":["assets/images/sunrise.svg","assets/images/sunset.svg","assets/images/addFavoris.svg","assets/images/deleteFavoris.svg","theme/index.js","store/actions/ActionTypes.js","store/reducers/WeatherReducer.js","store/reducers/FavoriteReducer.js","store/reducers/ImagesReducers.js","store/index.js","components/MeteoDay.js","store/actions/FavoriteActions.js","components/CardMeteoWeek.js","components/MeteoWeek.js","components/Buttons.js","store/actions/WeatherActions.js","components/InputTown.js","components/NavBar.js","utils/Direction/directionWin.js","utils/Date/minParser.js","components/ForeCast.js","components/Meteo8Days.js","components/RainCard.js","components/MeteoRainHour.js","components/WeatherMap.js","pages/Weather.js","components/Cards.js","components/ButtonBack.js","pages/Articles.js","store/actions/ImagesActions.js","pages/NotFound.js","App.js","serviceWorker.js","index.js","utils/Date/dateFormatMeteo.js"],"names":["theme","createTheme","palette","type","primary","main","secondary","error","GET_WEATHER_DATA","GET_WEATHERSWEEK_DATA","GET_COUNTRY_DATA","POST_COUNTRY_DATA","GET_IMAGES_DATA","GET_APIMETEO_ALL_DATA","initialState","data","dataWeek","dataAll","dataCountry","rootReducer","combineReducers","weather","state","action","Actions","payload","favorite","images","store","createStore","composeWithDevTools","applyMiddleware","thunk","MeteoDay","useSelector","useState","Favoris","setFavoris","handleChangeFavorite","e","some","item","name","NotFavorite","Favorite","form","dispatch","axios","post","catch","err","console","log","postCountry","useEffect","get","then","res","country","length","icon","checkIsFavorite","className","sx","maxWidth","id","size","variant","value","onClick","src","alt","gutterBottom","component","Math","round","temp","description","height","Sunrise","color","Date","sys","sunrise","toLocaleString","slice","Sunset","sunset","CardMeteoWeek","props","time","dt_txt","MeteoWeek","map","dt","Buttons","direction","spacing","href","getWeather","params","q","units","lang","appid","getWeathersWeek","list","InputTown","m","width","noValidate","autoComplete","label","input","document","getElementById","getValue","NavBar","expandIcon","directionWin","dataNumber","parseFloat","floor","minParser","date","dateMin","toLocaleDateString","year","month","day","hour","minute","split","ForeCast","daily","fn","wind_speed","display","alignSelf","wind_deg","ml","transform","Meteo8Days","lat","long","coord","lon","index","RainCard","backgroundColor","minutely","precipitation","MeteoRainHour","i","push","Map","mapRef","useRef","tileRef","current","L","tileLayer","attribution","mapParams","center","zoom","zoomControl","maxBounds","latLngBounds","latLng","closePopupOnClick","layers","control","OpenStreetMap","addTo","position","on","Fragment","CssBaseline","Container","Box","style","overflow","Weather","playOnce","setPlayOnce","weatherStyleApp","setWeatherStyleApp","timer","now","toString","Cards","image","url","content","ButtonBack","justifyContent","Articles","gridTemplateColumns","gap","NotFound","App","path","exact","element","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","StrictMode","cordova","addEventListener","navigator","serviceWorker","ready","registration","unregister","module","exports","dateFormatMeteo","dateUnix","weekday","substr"],"mappings":"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","file":"static/js/main.905ca945.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunrise.213f9a41.svg\";","export default __webpack_public_path__ + \"static/media/sunset.4e6a9fde.svg\";","export default __webpack_public_path__ + \"static/media/addFavoris.f8de480d.svg\";","export default __webpack_public_path__ + \"static/media/deleteFavoris.3ce917cb.svg\";","// import { red } from \"@mui/material/colors\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#26292B\",\n    },\n    secondary: {\n      main: \"#f50057\",\n    },\n    error: {\n      main: \"#d50000\",\n    },\n  },\n});\n\nexport default theme;\n/** Material UI **/\n\n// Card\nexport { default as Card } from \"@mui/material/Card\";\nexport { default as CardActions } from \"@mui/material/CardActions\";\nexport { default as CardContent } from \"@mui/material/CardContent\";\nexport { default as CardMedia } from \"@mui/material/CardMedia\";\nexport { default as Typography } from \"@mui/material/Typography\";\n\n// Button\nexport { default as Button } from \"@mui/material/Button\";\nexport { default as Stack } from \"@mui/material/Stack\";\n\n// InputTown\nexport { default as TextField } from \"@mui/material/TextField\";\nexport { default as Box } from \"@mui/material/Box\";\n\n// Accordeon Mui\nexport { default as Accordion }  from \"@mui/material/Accordion\";\nexport { default as AccordionSummary }  from \"@mui/material/AccordionSummary\";\nexport { default as AccordionDetails }  from \"@mui/material/AccordionDetails\";\nexport { default as ExpandMoreIcon }  from \"@mui/icons-material/ExpandMore\";\n\n// Container\nexport { default as CssBaseline } from '@mui/material/CssBaseline';\nexport { default as Container } from '@mui/material/Container';\n\n//icon\nexport { default as ArrowCircleUp } from \"@mui/icons-material/ArrowCircleUp\";\n\n\n","/* \n * Action types {...}\n * ****************** */\n\n// Weather\nexport const GET_WEATHER_DATA = \"GET_WEATHER_DATA\";\nexport const GET_WEATHERSWEEK_DATA = \"GET_WEATHERSWEEK_DATA\";\nexport const GET_COUNTRY_DATA = \"GET_COUNTRY_DATA\";\nexport const POST_COUNTRY_DATA = \"POST_COUNTRY_DATA\";\n\n// Cats\nexport const GET_IMAGES_DATA = 'GET_IMAGES_DATA'\n\n//update wil\nexport const GET_APIMETEO_ALL_DATA = \"GET_APIMETEO_ALL_DATA\";\n","/*\n * Import Actions {...}\n * ******************** */\nimport * as Actions from \"../actions/ActionTypes.js\";\n\n/*\n * Selector\n * ******** */\nconst initialState = {\n  data: {},\n  dataWeek: {},\n  //Update wil\n  dataAll: {},\n};\n\n/*\n * Reducers\n * ******** */\n\nexport function WeatherReducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n    case Actions.GET_WEATHER_DATA:\n      return { ...state, data: action.payload };\n    case Actions.GET_WEATHERSWEEK_DATA:\n      return { ...state, dataWeek: action.payload };\n    //Update wil\n    case Actions.GET_APIMETEO_ALL_DATA:\n      return { ...state, dataAll: action.payload };\n  }\n}\n\n/*\n * Getters\n * ******* */\n","/*\n * Import Actions {...}\n * ******************** */\nimport * as Actions from \"../actions/ActionTypes.js\";\n\n/*\n * Selector\n * ******** */\nconst initialState = {\n  dataCountry: {},\n};\n\n/*\n * Reducers\n * ******** */\n\nexport function FavoriteReducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n    case Actions.GET_COUNTRY_DATA:\n      return { ...state, dataCountry: action.payload };\n    case Actions.POST_COUNTRY_DATA:\n      return { ...state };\n  }\n}\n\n/*\n * Getters\n * ******* */\n","/*\n * Import Actions { ... }\n * ********************** */\nimport * as Actions from \"../actions/ActionTypes\";\n\n/*\n * Selector = State\n * ******** */\nconst initialState = {\n  data: [],\n};\n\n/*\n * Reducers\n * ******** */\n// Exporter la fonction ImagesReducer\nexport function ImagesReducer(state = initialState, action) {\n  // Importer le type d'action\n  switch (action.type) {\n    //   GET_IMAGES_DATA issu de fichier ActionsTypes\n    case Actions.GET_IMAGES_DATA:\n      return { ...state, data: action.payload };\n    // case Actions.GET_POSTS:\n    //   return { ...state };\n    // case Actions.ADD_POST:\n    //   return [action.payload, ...state];\n    default:\n      // retourner l'état\n      return state;\n  }\n}\n\n/*\n * Getters\n * ******* */\n","/*\n * Import config store by react\n * **************************** */ \nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\n/*\n * Reducers\n * ******** */ \nimport {WeatherReducer} from \"./reducers/WeatherReducer\";\nimport {FavoriteReducer} from \"./reducers/FavoriteReducer\";\n// Cats\nimport { ImagesReducer } from \"./reducers/ImagesReducers\";\n\n/*\n * Centralisation du store (root reducers)\n * *************************************** */ \nconst rootReducer = combineReducers({\n    weather: WeatherReducer,\n    favorite: FavoriteReducer,\n    // Cats\n    images:ImagesReducer\n});\n\n/*\n * Export du store\n * *************** */ \nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))); //Dev\n// export const store = createStore(rootReducer); //prod","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Sunrise from \"../assets/images/sunrise.svg\";\nimport Sunset from \"../assets/images/sunset.svg\";\nimport NotFavorite from \"../assets/images/addFavoris.svg\";\nimport Favorite from \"../assets/images/deleteFavoris.svg\";\n\n// import component mui\nimport * as theme from \"../theme\";\n\nimport { store } from \"../store\";\n\nimport { postCountry, getCountry } from \"../store/actions/FavoriteActions\";\n\nconst MeteoDay = () => {\n  const data = useSelector((state) => state.weather.data);\n  const dataCountry = useSelector((state) => state.favorite.dataCountry);\n  const [Favoris, setFavoris] = useState(\"\");\n\n  useEffect(() => {\n    store.dispatch(getCountry());\n    if (data.name) checkIsFavorite(data.name);\n  }, [data]);\n\n  function checkIsFavorite(country) {\n    if (dataCountry.length > 0) {\n      const icon = dataCountry.some((item) => item.name === country);\n      if (icon) {\n        setFavoris(Favorite);\n      } else {\n        setFavoris(NotFavorite);\n      }\n    }\n  }\n\n  function handleChangeFavorite(e) {\n    const checkExist = dataCountry.some((item) => item.name === data.name);\n    if (!checkExist) {\n      // console.log('pas dans la db');\n      setFavoris(Favorite);\n      const form = { name: data.name };\n      store.dispatch(postCountry(form));\n    } else {\n      // console.log('dans la db');\n      setFavoris(NotFavorite);\n    }\n  }\n\n  // console.log(Math.floor(Date.now() / 1000));\n  // const [weatherStyle, setWeatherStyle] = useState(\"night\");\n  // const [playOnce, setPlayOnce] = useState(true);\n\n  // if(playOnce){\n  //   if (data.sys) {\n  //     const sunRise = data.sys.sunrise;\n  //     const sunSet = data.sys.sunset;\n  //     const time = Math.floor(Date.now() / 1000);\n  // console.log(sunRise);\n  // console.log(sunSet);\n  // console.log(time);\n  //     if (sunRise < time && time < sunSet) {\n  //       setWeatherStyle(data.weather[0].main);\n  //       setPlayOnce (false);\n  //     } else {\n  //       setWeatherStyle(\"night\");\n  //       setPlayOnce (false);\n  //     }\n  //   }\n  // }\n  // console.log(weatherStyle);\n\n  return (\n    <theme.Card className=\"meteoDay\">\n      {data.weather && (\n        <theme.Card className=\"CountryIndice\">\n          <theme.Card sx={{ maxWidth: 345 }}>\n            {/* Image de fond */}\n            <theme.CardMedia\n              className=\"bg-dark text-white\"\n              id={data.weather[0].main}\n            />\n\n            {/* Favoris */}\n            <theme.CardActions>\n              <theme.Button\n                size=\"small\"\n                variant=\"contained\"\n                id=\"favoriteButton\"\n                value={data.name}\n                onClick={(e) => handleChangeFavorite(e)}\n              >\n                <img src={Favoris} alt=\"Favoris\" />\n              </theme.Button>\n            </theme.CardActions>\n\n            {/* Nom de la ville */}\n            <theme.CardContent>\n              <theme.Typography\n                gutterBottom\n                className=\"ville\"\n                variant=\"h5\"\n                component=\"div\"\n              >\n                {data.name}\n              </theme.Typography>\n\n              {/* Température actuelle */}\n              <theme.Typography\n                gutterBottom\n                className=\"temperature\"\n                variant=\"h5\"\n                component=\"div\"\n              >\n                {Math.round(data.main.temp)}°\n              </theme.Typography>\n\n              {/* Description du temps */}\n              <theme.Typography className=\"weatherDescr\">\n                {data.weather[0].description}\n              </theme.Typography>\n\n              {/* Levée et couchée de soleil */}\n              <theme.CardContent className=\"sunriseSunset\">\n                {/* Levée de soleil */}\n                <theme.CardContent className=\"sunriseCard\">\n                  <theme.CardMedia\n                    component=\"img\"\n                    height=\"35\"\n                    src={Sunrise}\n                    className=\"imageSun\"\n                    alt=\"Couché de soleil\"\n                  />\n                  <theme.Typography\n                    className=\"weatherDescrSun\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                  >\n                    {new Date(data.sys.sunrise * 1000)\n                      .toLocaleString()\n                      .slice(12, 17)}\n                  </theme.Typography>\n                </theme.CardContent>\n\n                {/* Couchée de soleil */}\n                <theme.CardContent className=\"sunsetCard\">\n                  <theme.CardMedia\n                    component=\"img\"\n                    height=\"35\"\n                    src={Sunset}\n                    className=\"imageSun\"\n                    alt=\"Couché de soleil\"\n                  />\n                  <theme.Typography\n                    className=\"weatherDescrSun\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                  >\n                    {new Date(data.sys.sunset * 1000)\n                      .toLocaleString()\n                      .slice(12, 17)}\n                  </theme.Typography>\n                </theme.CardContent>\n              </theme.CardContent>\n            </theme.CardContent>\n          </theme.Card>\n        </theme.Card>\n      )}\n    </theme.Card>\n  );\n};\n\nexport default MeteoDay;\n","/*\n * Import - Module\n * *************** */\nimport axios from \"axios\";\n\n/*\n * Import types {...}\n * ****************** */\nimport {\n  GET_COUNTRY_DATA,\n} from \"./ActionTypes.js\";\n\n/*\n * Actions\n * ******* */\n  \n  // Get Country\n  export const getCountry = () => {\n    return (dispatch) => {\n      return axios\n        .get(\"http://localhost:3003/favorite\")\n        .then((res) => {\n          // console.log('res favorite', res.data)\n          dispatch({ type: GET_COUNTRY_DATA, payload: res.data });\n        })\n        .catch((err) => console.log(err));\n    };\n  };\n  \n  // Post Country\n  export const postCountry = (data) => {\n    return (dispatch) => {\n      return (\n        axios\n          .post(\"http://localhost:3003/favorite\", data)\n          .catch((err) => console.log(err))\n      );\n    };\n  };\n  ","import React from \"react\";\n// MUI\nimport * as theme from \"../theme\";\n\n\nconst CardMeteoWeek = (props) => {\n  const { time } = props;\n  return (\n    <div className=\"cardDiv\">\n      <theme.Card sx={{ maxWidth: 345 }}>\n\n        {/* Image de fond */}\n\n        <theme.Typography variant=\"body2\" color=\"text.secondary\">\n          {Math.round(time.main.temp)}°\n        </theme.Typography>\n        <theme.CardMedia className={time.weather[0].main} />\n\n\n        <theme.CardContent>\n\n          {/* Date */}\n          <theme.Typography gutterBottom variant=\"h5\" component=\"div\">\n            {time.dt_txt.slice(8, 10)}/{time.dt_txt.slice(5, 7)}\n          </theme.Typography>\n\n          {/* Heure */}\n          <theme.Typography variant=\"body2\" color=\"text.secondary\">\n            {time.dt_txt.slice(11, 16)}\n          </theme.Typography>\n\n        </theme.CardContent>\n\n      </theme.Card>\n\n    </div>\n  );\n};\n\nexport default CardMeteoWeek;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CardMeteoWeek from \"./CardMeteoWeek\";\n\n//import component Mui\nimport * as theme from \"../theme\";\n\nconst MeteoWeek = () => {\n  const dataWeek = useSelector((state) => state.weather.dataWeek);\n  dataWeek.length = 6;\n  // console.log(dataWeek)\n\n  return (\n    <div className=\"meteoWeek\">\n      {dataWeek[0] && (\n        <theme.CardContent className=\"meteoWeekUl\">\n          {dataWeek.map((time) => (\n            <CardMeteoWeek time={time} key={time.dt} />\n          ))}\n        </theme.CardContent>\n      )}\n    </div>\n  );\n};\n\nexport default MeteoWeek;\n","import React from \"react\";\n// MUI\nimport * as theme from \"../theme\";\n\nconst Buttons = () => {\n  return (\n    <div>\n      <theme.Stack direction=\"row\" spacing={2}>\n        <theme.Button href=\"/articles#/article\" variant=\"contained\" color=\"warning\">\n          ARTICLE\n        </theme.Button>\n      </theme.Stack>\n    </div>\n  );\n};\n\nexport default Buttons;\n","/*\n * Import - Module\n * *************** */\nimport axios from \"axios\";\n\n/*\n * Import types {...}\n * ****************** */\nimport {\n  GET_WEATHER_DATA,\n  GET_WEATHERSWEEK_DATA,\n  GET_APIMETEO_ALL_DATA,\n} from \"./ActionTypes.js\";\n\n/*\n * Actions\n * ******* */\n\n// Get Weather\nexport const getWeather = (country) => {\n  return (dispatch) => {\n    return axios\n      .get(\"http://api.openweathermap.org/data/2.5/weather?\", {\n        params: {\n          q: country,\n          units: \"metric\",\n          lang: \"fr\",\n          appid: \"32ee58ebca536764e3cda83854a4fe6e\",\n        },\n      })\n      .then((res) => {\n        dispatch({ type: GET_WEATHER_DATA, payload: res.data });\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\n// Get WeathersWeek\nexport const getWeathersWeek = (country) => {\n  return (dispatch) => {\n    return axios\n      .get(\"https://api.openweathermap.org/data/2.5/forecast/?\", {\n        params: {\n          q: country,\n          units: \"metric\",\n          lang: \"fr\",\n          appid: \"32ee58ebca536764e3cda83854a4fe6e\",\n        },\n      })\n      .then((res) => {\n        dispatch({ type: GET_WEATHERSWEEK_DATA, payload: res.data.list });\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\n//updat Wil\n// Get Meteo All APi with long and lat \nexport const getMeteoAll = (lat, long) => {\n  return (dispatch) => {\n      return axios.get(\"https://api.openweathermap.org/data/2.5/onecall?\", {\n        params: {\n          lat: lat, lon: long, units: \"metric\", lang: \"fr\",\n         // ce genre de clé est à mettre dans un .env\n         appid: \"32ee58ebca536764e3cda83854a4fe6e\",\n        },\n\n      }).then((res) => {\n        // console.log(\"DATA_ALL\", lat, long, res.data);\n        dispatch({ type: GET_APIMETEO_ALL_DATA, payload: res.data });\n\n      }).catch((err) => console.log(err));\n  };\n};\n","import React from \"react\";\n// MUI\nimport * as theme from \"../theme\";\n\nimport { store } from \"../store\";\n\nimport { getWeather, getWeathersWeek } from \"../store/actions/WeatherActions\";\n\nconst InputTown = (props) => {\n  function getValue() {\n    var input = document.getElementById(\"ville\").value;\n    if (input.length > 0) {\n      store.dispatch(getWeather(input));\n      store.dispatch(getWeathersWeek(input));\n    }\n  }\n\n  return (\n    <div className=\"InputTown\">\n      <theme.Box\n        component=\"form\"\n        sx={{\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <theme.TextField id=\"ville\" label=\"Ville\" variant=\"outlined\" />\n        <theme.Stack spacing={2} direction=\"row\">\n          <theme.Button onClick={(e) => getValue(e)} variant=\"contained\">\n            OK\n          </theme.Button>\n        </theme.Stack>\n      </theme.Box>\n    </div>\n  );\n};\n\nexport default InputTown;\n","\nimport React from \"react\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Buttons from \"../components/Buttons\";\nimport InputTown from \"./InputTown\";\n//import component MUI\nimport * as theme from \"../theme\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"navbar\" id=\"navBarSelectionTown\" >\n      <theme.Accordion>\n        <theme.AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        ></theme.AccordionSummary>\n        <theme.AccordionDetails>\n          <InputTown />\n            <Buttons /> \n        </theme.AccordionDetails>\n      </theme.Accordion>\n    </div>\n  );\n};\n\nexport default NavBar;\n","export const directionWin = (data) => {\n  let dataNumber = parseFloat(data)\n  const quadrants = [\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSO\",\"SO\",\"OSO\",\"O\",\"ONO\",\"NO\",\"NNO\"]\n            \n  if (dataNumber > 348.75 || dataNumber <= 11.25) \n  {\n    return \"N\"\n  }      \n  else {\n    let index = Math.floor(((dataNumber - 11.25) / 22.5)+1)\n    // console.log(index)\n    return quadrants[index-1]\n\n  }\n};","// Date Format\nexport const minParser = (date) => {\n  const dateMin = new Date(date*1000);\n  let newDate = new Date(dateMin ).toLocaleDateString('fr-FR',{\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  })\n  let hour = newDate.split(',');\n  // console.log(hour[1]);\n  return hour[1]\n};\n","\nimport * as React from \"react\";\n// MUI\nimport * as theme from \"../theme\";\n\n//import des fonctions\nimport * as fn from \"../utils\"\n\nconst ForeCast = (data) => {\n\n  return (\n    <div className=\"cardDiv\">\n      <theme.Card sx={{ maxWidth: 345 }}>\n        <theme.CardMedia className={data.daily.weather[0].main} />\n        <theme.CardContent>\n          <theme.Typography sx={{ color: \"white\" }} component=\"p\">\n            {fn.dateFormatMeteo(data.daily.dt)}\n          </theme.Typography>\n\n          <theme.Typography sx={{ color: \"white\" }} component=\"p\">\n            {data.daily.weather[0].description}\n          </theme.Typography>\n\n          <theme.Typography\n            sx={{ color: \"white\" }}\n            variant=\"p\"\n            color=\"text.secondary\"\n            component=\"div\"\n          >\n            {Math.round(data.daily.temp.day)} °C\n          </theme.Typography>\n\n          <theme.Typography sx={{ color: \"white\" }} component=\"p\">\n            {Math.round(data.daily.wind_speed)} Km/h\n          </theme.Typography>\n\n          <theme.Typography sx={{ color: \"white\", display: \"flex\", alignSelf: \"center\"}} component=\"p\">\n            {fn.directionWin(data.daily.wind_deg)}\n            <theme.ArrowCircleUp sx={{ ml:1, color: \"white\", transform: `rotateZ(${data.daily.wind_deg}deg)` }} />\n          </theme.Typography>\n\n        </theme.CardContent>\n      </theme.Card>\n    </div>\n  );\n};\n\nexport default ForeCast;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"../store\";\nimport { getMeteoAll } from \"../store/actions/WeatherActions\";\nimport ForeCast from \"./ForeCast\";\n\n// MUI\nimport * as theme from \"../theme\";\n\nconst Meteo8Days = () => {\n  const data = useSelector((state) => state.weather.data);\n  // console.log('api kevin',data);\n  const dataAll = useSelector((state) => state.weather.dataAll);\n  // console.log(dataAll);\n\n  useEffect(() => {\n    // console.log(data.weather);\n    if (data.weather) {\n      // console.log(dataCurrent.coord.lat, dataCurrent.coord.lon);\n      store.dispatch(getMeteoAll(data.coord.lat, data.coord.lon));\n    }\n  }, [data]);\n\n  return (\n    <div className=\"meteoWeek\">\n      {data.weather && dataAll.daily && (\n        <theme.CardContent className=\"meteoWeekUl\">\n          {dataAll.daily.map((data, index) => (\n            <ForeCast daily={data} key={index} />\n          ))}\n        </theme.CardContent>\n      )}\n    </div>\n  );\n};\n\nexport default Meteo8Days;\n","//         *************************************\n// ******* COMPONENT PARENT DE MeteoRainHour.js *******\n//         *************************************\nimport * as React from \"react\";\n\n //import component Mui\nimport * as theme from \"../theme\";\n\n//import des fonctions\nimport * as fn from \"../utils\"\n\nconst RainCard = (data) => {\n\n  return (\n      \n    <div className=\"cardDiv\">\n        \n      <theme.Card sx={{ width: 100 ,backgroundColor: 'transparent'}}>\n      \n        <theme.CardContent> \n          <theme.Typography  component=\"p\" sx={{color:\"white\"}}>\n          {fn.minParser(data.minutely.dt)}\n          </theme.Typography>\n\n          <theme.Typography component=\"p\" sx={{color:\"white\"}}>\n          {data.minutely.precipitation} % \n          </theme.Typography>\n        </theme.CardContent>\n      </theme.Card>\n    </div>\n  );\n};\n\nexport default RainCard;","//         *************************************\n// ******* COMPONENT ENFANT DE RainCard.js *******\n//         *************************************\nimport React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport RainCard from \"./RainCard\"\nimport * as theme from \"../theme\";\n\nfunction MeteoRainHour() {\n    const data = useSelector((state) => state.weather.data);\n    \n    const dataAll = useSelector((state) => state.weather.dataAll);\n    \n    // const minutely , la boucle for permet de prendre 1 elément sur 10 dans la tableau\n    const minutely = [];\n\n    if (dataAll.minutely) {\n        for (let i = 0; i < dataAll.minutely.length;) {\n            minutely.push(dataAll.minutely[i]);\n            i = i + 10;\n        }\n        // console.log(minutely);\n    }\n\n    return (\n        <div className=\"meteoWeek\">\n            <h1 className=\"cardDiv\">Pluviométrie</h1>\n            {data.weather && dataAll.minutely && (\n                <theme.CardContent>\n                    {minutely.map((data, index) => (\n                        <RainCard minutely={data} key={index} />\n                    ))}\n                </theme.CardContent>\n            )}\n        </div>\n    )\n}\n\nexport default MeteoRainHour;\n","import React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nexport default function Map() {\n  const mapRef = useRef(null);\n  const tileRef = useRef(null);\n\n  tileRef.current = L.tileLayer(\n    `https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}`,\n    { \n      attribution:\n        'Tiles &copy; meteo fr',\n    }\n  );\n\n  const mapStyles = { overflow: \"hidden\", width: \"100%\", height: \"500px\" };\n\n  const mapParams = {\n    center: [48, 2.3],\n    zoom: 5,\n    zoomControl: false,\n    maxBounds: L.latLngBounds(L.latLng(-150, -240), L.latLng(150, 240)),\n    closePopupOnClick: false,\n    layers: [tileRef.current], // Change MAP_TILE to the tileRef here};\n  };\n\n  // Map creation:\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", mapParams);\n  }, []);\n\n  // Add controls:\n  useEffect(() => {\n    // Pass a baseLayers object to the layer control:\n    L.control\n      .layers({\n        OpenStreetMap: tileRef.current,\n      })\n      .addTo(mapRef.current); // Add the control to our map instance\n\n    // Create the zoom control:\n    L.control\n      .zoom({\n        position: \"topright\",\n      })\n      .addTo(mapRef.current); // Add the control to our map instance\n  }, []);\n\n  useEffect(() => {\n    // Use mapRef.current to add map event listeners to\n    // our map instance:\n    mapRef.current.on(\"zoomstart\", () => {\n      console.log(\"ZOOM STARTED\");\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <Container className=\"containerMap\" maxWidth=\"sm\">\n            <Box id=\"map\" style={mapStyles} />\n        </Container>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport MeteoDay from \"../components/MeteoDay\";\nimport MeteoWeek from \"../components/MeteoWeek\";\nimport NavBar from \"../components/NavBar\";\nimport Meteo8Days from \"../components/Meteo8Days\";\nimport MeteoRainHour from \"../components/MeteoRainHour\";\nimport WeatherMap from \"../components/WeatherMap\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\n\nconst Weather = () => {\n  const [playOnce, setPlayOnce] = useState(true);\n  const [weatherStyleApp, setWeatherStyleApp] = useState(\"nightApp\");\n  const timer = new Date(Date.now()).toString().slice(16, 18);\n\n  if (playOnce) {\n    if (6 < timer && timer < 19) {\n      setWeatherStyleApp(\"dayApp\");\n      setPlayOnce(false);\n    }\n  }\n\n  return (\n    <div className={weatherStyleApp}>\n      <React.Fragment>\n        <CssBaseline />\n        <Container className=\"containerTop\" maxWidth=\"xl\">\n          <MeteoDay />\n          <WeatherMap />\n        </Container>\n      </React.Fragment>\n      <MeteoWeek />\n      <Meteo8Days />\n      <MeteoRainHour />\n      <NavBar />\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\n\n// MUI\nimport * as theme from \"../theme\";\n// Autre import de MUI de manière global\n// import * as Mui from '@mui/material';\n\n// Les actions du STORE sont contenus dans les PROPS\nconst Cards = (props) => {\n  return (\n    <div>\n      <theme.Card>\n        <theme.CardMedia component=\"img\" height=\"230\" image={props.data.url} />\n        <theme.CardContent>\n          <theme.Typography gutterBottom variant=\"h5\" component=\"\" color=\"black\">\n            {props.data.id}\n          </theme.Typography>\n          <theme.Typography variant=\"body2\">\n            <p>{props.data.content}</p>\n          </theme.Typography>\n        </theme.CardContent>\n        <theme.CardActions>{/* <Stack spacing={2}></Stack> */}</theme.CardActions>\n      </theme.Card>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\n// MUI\nimport * as theme from \"../theme\";\n\nconst ButtonBack = () => {\n  return (\n    <div>\n      <theme.Stack\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n        direction=\"row\"\n        spacing={2}\n      >\n        <theme.Button href=\"/\" variant=\"contained\" color=\"warning\">\n          RETOUR\n        </theme.Button>\n      </theme.Stack>\n    </div>\n  );\n};\n\nexport default ButtonBack;\n","import { useSelector } from \"react-redux\";\nimport Cards from \"../components/Cards\";\n\n// MUI\n// import Box from \"@mui/material/Box\";\n// import Grid from \"@mui/material/Grid\";\nimport * as Mui from \"@mui/material\";\n\nimport { useEffect } from \"react\";\n\nimport { store } from \"../store\";\nimport { getImages } from \"../store/actions/ImagesActions\";\nimport ButtonBack from \"../components/ButtonBack\";\n\nconst Articles = () => {\n  // UseSelector permet d'aller chercher le STORE de l'application\n  const data = useSelector((state) => state.images.data);\n\n  useEffect(() => {\n    store.dispatch(getImages());\n  }, []);\n\n  return (\n    <div className=\"article\">\n      \n      <h1>Cats</h1>\n      <ButtonBack />\n      <div className=\"card\">\n        {[0].map((id) => (\n          <Mui.Grid key={id}>\n            <Mui.Box\n              sx={{ width: 1 }}\n              display=\"grid\"\n              // Colonne 4\n              gridTemplateColumns=\"repeat(3, 1fr)\"\n              gap={4}\n            >\n              {data.length > 0 &&\n                data.map((data) => {\n                  return <Cards data={data} key={data.id} />;\n                })}\n            </Mui.Box>\n          </Mui.Grid>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;\n","/*\n * Import - Module\n * *************** */\nimport axios from \"axios\";\n\n/*\n * Import types actions { ... }\n * ******************** */\nimport { GET_IMAGES_DATA } from \"./ActionTypes\";\n\n/*\n * Actions\n * ******* */\n\n// Get Images\nexport const getImages = () => {\n  return (dispatch) => {\n    return axios\n    //   Demander à axios d'aller chercher dans DB\n    .get(\"http://localhost:3003/images\")\n    // Et nous renvoyer les datas\n    .then((res) => {\n        console.log('res data', res.data)\n        dispatch({ type: GET_IMAGES_DATA, payload: res.data})\n    })\n      .catch((err) => console.log(err));\n  };\n};\n\n","\nconst NotFound = () => {\n  return (\n    <div className=\"not\">\n      <h1>Il n'y a rien ici !!</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport Weather from \"./pages/Weather\";\nimport Articles from \"./pages/Articles\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" exact element={<Weather />} />\n        <Route path=\"/article\" exact element={<Articles />} />\n        <Route element={NotFound} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n// import \"./styles/index.scss\";\nimport { store } from \"./store\";\nimport { StyledEngineProvider } from \"@mui/material/styles\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { getWeather, getWeathersWeek } from \"./store/actions/WeatherActions\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./theme/index\";\nimport \"./assets/scss/index.scss\";\n\n// Cats\n// import { getImages } from \"./store/actions/ImagesActions\";\n\nstore.dispatch(getWeather(\"Paris\"));\nstore.dispatch(getWeathersWeek(\"Paris\"));\n// Cats\n// store.dispatch(getImages());\n\nconst renderReactDom = () => {\nReactDOM.render(\n  <Provider store={store}>\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\nserviceWorker.unregister();","// Date Format\n\nmodule.exports = {\n  dateFormatMeteo: function (date) {\n    const dateUnix = new Date(date * 1000);\n    let weekday = new Date(dateUnix).toLocaleDateString(\"fr-FR\", {\n      // year: \"numeric\",\n      // month: \"long\",\n      weekday: \"long\",\n    });\n\n    let day = new Date(dateUnix).toLocaleDateString(\"fr-FR\", {\n      day: \"numeric\",\n    });\n\n    let newDate = weekday.substr(0, 3) + \". \" + day;\n    return newDate;\n  },\n};"],"sourceRoot":""}