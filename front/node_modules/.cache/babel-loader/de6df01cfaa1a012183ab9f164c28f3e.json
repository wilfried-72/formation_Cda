{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_LIKE, ADD_POST, DELETE_POST, EDIT_POST, GET_POST } from \"./ActionTypes\";\nexport const getPosts = () => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.get(process.env.REACT_APP_SERVEUR + \"/api/posts\").then(res => {\n      // console.log(\"Action Get Post \" ,res)\n      // renvoi les data du type GET_POSTS pour notre exemple avec les data dans la reponse avec payload\n      //dispatch veut dire va dans les reducers via index.js de reducers\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      }); // console.log(\"Action \" ,res.data.posts)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPosts = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.post(process.env.REACT_APP_SERVEUR + \"/api/posts\", data).then(res => {\n      // console.log(\"Res Add Post \", res.data.posts);\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editPosts = data => {\n  return dispatch => {\n    console.log(\"edit posts\");\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_POST,\n        payload: res.data.posts\n      }); // console.log(\"data.posts Edit \" ,res.data.dataEdit)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    // console.log(\"postId Delete\", postId);\n    return axios({\n      method: \"delete\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/${postId}`\n    }).then(res => {\n      console.log(\"res delete post\", res.data);\n      dispatch({\n        type: DELETE_POST,\n        payload: res.data\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addLike = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/likes/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      // console.log(res.data)\n      dispatch({\n        type: ADD_LIKE,\n        payload: res.data.posts\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/actions/PostAction.js"],"names":["axios","ADD_LIKE","ADD_POST","DELETE_POST","EDIT_POST","GET_POST","getPosts","dispatch","get","process","env","REACT_APP_SERVEUR","then","res","type","payload","data","catch","err","console","log","addPosts","post","editPosts","method","url","id","posts","deletePost","postId","addLike"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_LIKE,\n  ADD_POST,\n  DELETE_POST,\n  EDIT_POST,\n  GET_POST,\n} from \"./ActionTypes\";\n\nexport const getPosts = () => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .get(process.env.REACT_APP_SERVEUR + \"/api/posts\")\n      .then((res) => {\n        // console.log(\"Action Get Post \" ,res)\n        // renvoi les data du type GET_POSTS pour notre exemple avec les data dans la reponse avec payload\n        //dispatch veut dire va dans les reducers via index.js de reducers\n        dispatch({\n          type: GET_POST,\n          payload: res.data,\n        });\n        // console.log(\"Action \" ,res.data.posts)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const addPosts = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .post(process.env.REACT_APP_SERVEUR + \"/api/posts\", data)\n      .then((res) => {\n        // console.log(\"Res Add Post \", res.data.posts);\n        dispatch({\n          type: ADD_POST,\n          payload: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const editPosts = (data) => {\n  return (dispatch) => {\n    console.log(\"edit posts\");\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        dispatch({\n          type: EDIT_POST,\n          payload: res.data.posts,\n        });\n        // console.log(\"data.posts Edit \" ,res.data.dataEdit)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const deletePost = (postId) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    // console.log(\"postId Delete\", postId);\n    return axios({\n      method: \"delete\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/${postId}`,\n    })\n      .then((res) => {\n        console.log(\"res delete post\", res.data);\n        dispatch({\n          type: DELETE_POST,\n          payload: res.data,\n        });\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const addLike = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api/posts/likes/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        // console.log(res.data)\n        dispatch({\n          type: ADD_LIKE,\n          payload: res.data.posts,\n        });\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}