{"ast":null,"code":"import axios from \"axios\";\n/*\n * Import types { ... }\n * ******************** */\n\nimport { ADD_USER, ADD_USER_LIKE, CHOICE_USER, DELETE_USER, DEL_FLASH_USER, EDIT_POST, EDIT_USER, GET_POST, GET_USERS } from \"./ActionTypes\";\nexport const getUser = () => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données\n    // voir dans doc axios\n    return axios.get(process.env.REACT_APP_SERVEUR + \"/api/users\").then(res => {\n      // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n      //dispatch veut dire va dans les reducers via index.js de reducers \n      // console.log(\"data.users getUser Action \",res.data.users)\n      dispatch({\n        type: GET_USERS,\n        payload: res.data.users\n      }); // console.log(\"Action User \" ,res.data.users)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addUserLike = data => {\n  // console.log(\"addUserLike action form \",data)\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api//users/likes/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      // console.log(\"addUserLike \",res.data)\n      dispatch({\n        type: ADD_USER_LIKE,\n        payload: res.data.users\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addUser = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.post(process.env.REACT_APP_SERVEUR + \"/api/users\", data).then(res => {\n      //    console.log(\"Res Add User \", res.data);\n      // console.log(\"Res message addUser \", res.data);\n      dispatch({\n        type: ADD_USER,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editUsers = data => {\n  // console.log(\"Edit user\", data)\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR + `/api/users/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      // console.log(\"Res message editUser \", res.data.message);\n      // console.log(\"Res type editUser \", res.data.type);\n      if (res.data.type === \"success\") {\n        // console.log(\"success\")\n        // console.log(\"userEdit Action res.data.posts \", res.data.posts)\n        // console.log(\"userEdit Action res.data.users\", res.data)\n        // console.log(\"userEdit Action res.data.usersId[0] \", res.data.usersId[0])\n        dispatch({\n          type: EDIT_USER,\n          payload: res.data\n        });\n        dispatch({\n          type: EDIT_POST,\n          payload: res.data.posts\n        });\n        dispatch({\n          type: CHOICE_USER,\n          payload: res.data.usersId[0]\n        });\n      } else {\n        dispatch({\n          type: EDIT_USER,\n          payload: res.data\n        });\n      } // si ne fonctionne pas alors console err\n\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteUser = userId => {\n  return dispatch => {\n    return axios({\n      method: \"delete\",\n      url: process.env.REACT_APP_SERVEUR + `/api/users/${userId}`\n    }).then(res => {\n      // console.log('res delete user', res.data)\n      dispatch({\n        type: DELETE_USER,\n        payload: res.data\n      });\n      dispatch({\n        type: GET_POST,\n        payload: res.data.posts\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const choiceUser = data => {\n  // console.log(\"choiceUser\", data)\n  return dispatch => {\n    dispatch({\n      type: CHOICE_USER,\n      payload: data\n    });\n  };\n};\nexport const deleteFlashsUser = () => {\n  // console.log(\"choiceUser\", data)\n  return dispatch => {\n    dispatch({\n      type: DEL_FLASH_USER,\n      payload: \"\"\n    });\n  };\n};","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/actions/UserAction.js"],"names":["axios","ADD_USER","ADD_USER_LIKE","CHOICE_USER","DELETE_USER","DEL_FLASH_USER","EDIT_POST","EDIT_USER","GET_POST","GET_USERS","getUser","dispatch","get","process","env","REACT_APP_SERVEUR","then","res","type","payload","data","users","catch","err","console","log","addUserLike","method","url","id","addUser","post","editUsers","posts","usersId","deleteUser","userId","choiceUser","deleteFlashsUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n/*\n * Import types { ... }\n * ******************** */\nimport { ADD_USER, ADD_USER_LIKE, CHOICE_USER, DELETE_USER, DEL_FLASH_USER, EDIT_POST, EDIT_USER, GET_POST, GET_USERS } from \"./ActionTypes\";\n\n\nexport const getUser = () => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données\n    // voir dans doc axios\n    return axios.get(process.env.REACT_APP_SERVEUR+\"/api/users\")\n      .then((res) => {\n        // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n        //dispatch veut dire va dans les reducers via index.js de reducers \n        // console.log(\"data.users getUser Action \",res.data.users)\n        dispatch({\n          type: GET_USERS,\n          payload: res.data.users,\n        })\n        // console.log(\"Action User \" ,res.data.users)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err))\n  }\n}\nexport const addUserLike = (data) => {\n  // console.log(\"addUserLike action form \",data)\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR+`/api//users/likes/${data.id}`,\n      data: { ...data }\n    })\n      .then((res) => {\n        // console.log(\"addUserLike \",res.data)\n        dispatch({\n          type: ADD_USER_LIKE,\n          payload: res.data.users\n        })\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err))\n  }\n\n}\nexport const addUser = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .post(process.env.REACT_APP_SERVEUR+\"/api/users\", data)\n      .then((res) => {\n        //    console.log(\"Res Add User \", res.data);\n        // console.log(\"Res message addUser \", res.data);\n        dispatch({\n          type: ADD_USER,\n          payload: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\nexport const editUsers = (data) => {\n  // console.log(\"Edit user\", data)\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: process.env.REACT_APP_SERVEUR+`/api/users/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        // console.log(\"Res message editUser \", res.data.message);\n        // console.log(\"Res type editUser \", res.data.type);\n\n        if (res.data.type === \"success\") {\n          // console.log(\"success\")\n          // console.log(\"userEdit Action res.data.posts \", res.data.posts)\n          // console.log(\"userEdit Action res.data.users\", res.data)\n          // console.log(\"userEdit Action res.data.usersId[0] \", res.data.usersId[0])\n          dispatch({\n            type: EDIT_USER,\n            payload: res.data,\n          })\n          dispatch({\n            type: EDIT_POST,\n            payload: res.data.posts,\n          });\n          dispatch({\n            type: CHOICE_USER,\n            payload: res.data.usersId[0],\n          });\n        }\n        else {\n          dispatch({\n            type: EDIT_USER,\n            payload: res.data,\n          })\n        }\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\nexport const deleteUser = (userId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"delete\",\n      url: process.env.REACT_APP_SERVEUR+`/api/users/${userId}`,\n    })\n      .then((res) => {\n        // console.log('res delete user', res.data)\n        dispatch({\n          type: DELETE_USER,\n          payload: res.data,\n        });\n        dispatch({\n          type: GET_POST,\n          payload: res.data.posts,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\nexport const choiceUser = (data) => {\n  // console.log(\"choiceUser\", data)\n  return (dispatch) => {\n    dispatch({\n      type: CHOICE_USER,\n      payload: data,\n    });\n  }\n};\nexport const deleteFlashsUser = () => {\n  // console.log(\"choiceUser\", data)\n  return (dispatch) => {\n    dispatch({\n      type: DEL_FLASH_USER,\n      payload: \"\",\n    });\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}