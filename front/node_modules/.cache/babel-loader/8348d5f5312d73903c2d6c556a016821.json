{"ast":null,"code":"// ici function qui permet de vouir si un element n'est pas vide\nexport const isEmpty = value => {\n  return value === undefined || value === null || typeof value === \"object\" && Object.keys(value).length === 0 || typeof value === \"string\" && value.trim().length === 0;\n}; // Date Format\n\nexport const datePaser = date => {\n  // const dateUnix = new Date(date * 1000);\n  let newDate = new Date().setTime(date); // console.log(newDate)\n\n  let DateModif = new Date(newDate).toLocaleDateString(\"fr-FR\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  });\n  return DateModif;\n};","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/Utils.js"],"names":["isEmpty","value","undefined","Object","keys","length","trim","datePaser","date","newDate","Date","setTime","DateModif","toLocaleDateString","year","month","day","hour","minute","second"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAIC,KAAD,IAAW;AAChC,SACEA,KAAK,KAAKC,SAAV,IACAD,KAAK,KAAK,IADV,IAEC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,KAA8B,CAF5D,IAGC,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,IAAN,GAAaD,MAAb,KAAwB,CAJxD;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAME,SAAS,GAAIC,IAAD,IAAU;AACjC;AACA,MAAIC,OAAO,GAAI,IAAIC,IAAJ,GAAWC,OAAX,CAAmBH,IAAnB,CAAf,CAFiC,CAGjC;;AACA,MAAII,SAAS,GAAG,IAAIF,IAAJ,CAASD,OAAT,EAAkBI,kBAAlB,CAAqC,OAArC,EAA8C;AAC5DC,IAAAA,IAAI,EAAE,SADsD;AAE5DC,IAAAA,KAAK,EAAE,MAFqD;AAG5DC,IAAAA,GAAG,EAAE,SAHuD;AAI7DC,IAAAA,IAAI,EAAE,SAJuD;AAK5DC,IAAAA,MAAM,EAAE,SALoD;AAM5DC,IAAAA,MAAM,EAAE;AANoD,GAA9C,CAAhB;AASA,SAAOP,SAAP;AACD,CAdM","sourcesContent":["// ici function qui permet de vouir si un element n'est pas vide\nexport const isEmpty = (value) => {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n};\n\n// Date Format\nexport const datePaser = (date) => {\n  // const dateUnix = new Date(date * 1000);\n  let newDate = (new Date().setTime(date))\n  // console.log(newDate)\n  let DateModif = new Date(newDate).toLocaleDateString(\"fr-FR\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n   hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  });\n\n  return DateModif ;\n};\n"]},"metadata":{},"sourceType":"module"}