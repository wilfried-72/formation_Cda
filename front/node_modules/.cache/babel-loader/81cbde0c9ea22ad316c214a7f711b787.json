{"ast":null,"code":"import axios from \"axios\";\n/*\n * Import types { ... }\n * ******************** */\n\nimport { ADD_USER, ADD_USER_LIKE, CHOICE_USER, EDIT_USER, GET_USERS } from \"./ActionTypes\";\nexport const getUser = () => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données\n    // voir dans doc axios\n    return axios.get(\"http://localhost:3003/api/users\").then(res => {\n      // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n      //dispatch veut dire va dans les reducers via index.js de reducers \n      console.log(\"data.users getUser Action \", res.data.users);\n      dispatch({\n        type: GET_USERS,\n        payload: res.data.users\n      }); // console.log(\"Action User \" ,res.data.users)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addUserLike = data => {\n  // console.log(\"addUserLike action form \",data)\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api//users/likes/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      // console.log(\"addUserLike \",res.data)\n      dispatch({\n        type: ADD_USER_LIKE,\n        payload: res.data.users\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addUser = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.post(\"http://localhost:3003/api/users\", data).then(res => {\n      //    console.log(\"Res Add User \", res.data);\n      console.log(\"Res message \", res.data.message);\n      dispatch({\n        type: ADD_USER,\n        payload: res.data.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editUsers = data => {\n  // console.log(\"Edit user\", data)\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/users/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      // console.log(\"userEdit Action \" ,res.data.users)\n      dispatch({\n        type: EDIT_USER,\n        payload: res.data.users\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const choiceUser = data => {\n  // console.log(\"choiceUser\", data)\n  return dispatch => {\n    dispatch({\n      type: CHOICE_USER,\n      payload: data\n    });\n    return axios.get(\"http://localhost:3003/api/users\").then(res => {\n      // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n      //dispatch veut dire va dans les reducers via index.js de reducers \n      dispatch({\n        type: GET_USERS,\n        payload: res.data.users\n      }); // console.log(\"Action User \" ,res.data.users)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/actions/UserAction.js"],"names":["axios","ADD_USER","ADD_USER_LIKE","CHOICE_USER","EDIT_USER","GET_USERS","getUser","dispatch","get","then","res","console","log","data","users","type","payload","catch","err","addUserLike","method","url","id","addUser","post","message","editUsers","choiceUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n/*\n * Import types { ... }\n * ******************** */\nimport { ADD_USER, ADD_USER_LIKE, CHOICE_USER, EDIT_USER, GET_USERS } from \"./ActionTypes\";\n\n\nexport const getUser = () => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données\n    // voir dans doc axios\n    return axios.get(\"http://localhost:3003/api/users\")\n      .then((res) => {\n        // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n        //dispatch veut dire va dans les reducers via index.js de reducers \n        console.log(\"data.users getUser Action \",res.data.users)\n        dispatch({\n          type: GET_USERS,\n          payload: res.data.users,\n        })\n        // console.log(\"Action User \" ,res.data.users)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err))\n  }\n}\nexport const addUserLike = (data) => {\n  // console.log(\"addUserLike action form \",data)\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api//users/likes/${data.id}`,\n      data: { ...data }\n    })\n      .then((res) => {\n        // console.log(\"addUserLike \",res.data)\n        dispatch({\n          type: ADD_USER_LIKE,\n          payload: res.data.users\n        })\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err))\n  }\n\n}\nexport const addUser = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .post(\"http://localhost:3003/api/users\", data)\n      .then((res) => {\n        //    console.log(\"Res Add User \", res.data);\n        console.log(\"Res message \", res.data.message);\n        dispatch({\n          type: ADD_USER,\n          payload: res.data.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\nexport const editUsers = (data) => {\n  // console.log(\"Edit user\", data)\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/users/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        // console.log(\"userEdit Action \" ,res.data.users)\n        dispatch({\n          type: EDIT_USER,\n          payload: res.data.users,\n        });\n\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const choiceUser = (data) => {\n  // console.log(\"choiceUser\", data)\n  return (dispatch) => {\n    dispatch({\n      type: CHOICE_USER,\n      payload: data,\n    });\n\n    return axios.get(\"http://localhost:3003/api/users\")\n      .then((res) => {\n        // renvoi les data du type GET_USER pour notre exemple avec les data dans la reponse avec payload\n        //dispatch veut dire va dans les reducers via index.js de reducers \n        dispatch({\n          type: GET_USERS,\n          payload: res.data.users,\n        })\n        // console.log(\"Action User \" ,res.data.users)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err))\n\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}