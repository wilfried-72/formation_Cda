{"ast":null,"code":"import * as Actions from \"../actions/ActionTypes\";\nconst initialState = {\n  posts: [],\n  flashs: \"\"\n}; //se comporte comme un switch avec action\n\nexport default function PostReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //ici pour le cas GET_POSTS on retourne action.payload\n    // ici la les data du json\n    // et par défaut la variable state qui est vide via initialSate si aucun case n'est trouvé\n    case Actions.GET_POST:\n      console.log('Je suis dans le get post', state);\n      return { ...state,\n        posts: action.payload\n      };\n\n    case Actions.ADD_POST:\n      return { ...state,\n        posts: action.payload.posts,\n        flashs: action.payload.message\n      };\n\n    case Actions.EDIT_POST:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case Actions.DELETE_POST:\n      return { ...state,\n        posts: action.payload.posts,\n        flashs: action.payload.message\n      };\n\n    case Actions.ADD_LIKE:\n      // console.log(\"Actions.ADD_LIKE\")\n      return { ...state,\n        posts: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n_c = PostReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostReducer\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/reducers/PostReducer.js"],"names":["Actions","initialState","posts","flashs","PostReducer","state","action","type","GET_POST","console","log","payload","ADD_POST","message","EDIT_POST","DELETE_POST","ADD_LIKE"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB,C,CAKA;;AACA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACA,SAAKP,OAAO,CAACQ,QAAb;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,KAAxC;AACA,aAAO,EAAE,GAAGA,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACK;AAA1B,OAAP;;AACF,SAAKX,OAAO,CAACY,QAAb;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACK,OAAP,CAAeT,KAAlC;AAAyCC,QAAAA,MAAM,EAAEG,MAAM,CAACK,OAAP,CAAeE;AAAhE,OAAP;;AACF,SAAKb,OAAO,CAACc,SAAb;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACK;AAA1B,OAAP;;AACF,SAAKX,OAAO,CAACe,WAAb;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACK,OAAP,CAAeT,KAAlC;AAAyCC,QAAAA,MAAM,EAAEG,MAAM,CAACK,OAAP,CAAeE;AAAhE,OAAP;;AACF,SAAKb,OAAO,CAACgB,QAAb;AACE;AACA,aAAO,EAAE,GAAGX,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACK;AAA1B,OAAP;;AACF;AACE,aAAON,KAAP;AAjBJ;AAmBD;KApBuBD,W","sourcesContent":["import * as Actions from \"../actions/ActionTypes\";\n\nconst initialState = {\n  posts: [],\n  flashs: \"\"\n};\n\n//se comporte comme un switch avec action\nexport default function PostReducer(state = initialState, action) {\n  switch (action.type) {\n    //ici pour le cas GET_POSTS on retourne action.payload\n    // ici la les data du json\n    // et par défaut la variable state qui est vide via initialSate si aucun case n'est trouvé\n    case Actions.GET_POST:\n      console.log('Je suis dans le get post', state)\n      return { ...state, posts: action.payload };\n    case Actions.ADD_POST:\n      return { ...state, posts: action.payload.posts, flashs: action.payload.message };\n    case Actions.EDIT_POST:\n      return { ...state, posts: action.payload };\n    case Actions.DELETE_POST:\n      return { ...state, posts: action.payload.posts, flashs: action.payload.message };\n    case Actions.ADD_LIKE:\n      // console.log(\"Actions.ADD_LIKE\")\n      return { ...state, posts: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}