{"ast":null,"code":"var _jsxFileName = \"/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/SelectUser.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { store } from '../store';\nimport { choiceUser, getUser } from '../store/actions/UserAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectUser = () => {\n  _s();\n\n  // on recupere les data de notre store \n  const users = useSelector(state => state.userReducer.users); // console.log(\"state user \", users);\n  // Fonction pour mapper le select en fonction du store users trié par ordre alphabétique sur pseudo\n  // const selects = [];\n  // if (users.length > 0) {\n  //     users.map((user) => selects.push(user));\n  //     selects.sort(function (a, b) {\n  //         return a.pseudo - b.pseudo;\n  //     });\n  // }   \n  // console.log(select);\n  // fonction qui recupere l'objet du user lors du choix du select\n\n  function handleChangeUser(e) {\n    // console.log(\"Selected!!\", e.target.value);;\n    if (e.target.value === \"all\") {\n      const dataChoiceUserEmpty = \"\";\n      store.dispatch(choiceUser(dataChoiceUserEmpty));\n    } else {\n      const dataChoiceUser = users.find(userFind => userFind.pseudo === e.target.value);\n      store.dispatch(choiceUser(dataChoiceUser));\n    }\n\n    store.dispatch(getUser());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChoice\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choisir user:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => handleChangeUser(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), users && users.map(select => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: select.pseudo,\n                children: select.pseudo\n              }, select._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectUser, \"sx/aBQadEi3Xj/gxEkh8kVHzHlA=\", false, function () {\n  return [useSelector];\n});\n\n_c = SelectUser;\nexport default SelectUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectUser\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/SelectUser.js"],"names":["React","useSelector","store","choiceUser","getUser","SelectUser","users","state","userReducer","handleChangeUser","e","target","value","dataChoiceUserEmpty","dispatch","dataChoiceUser","find","userFind","pseudo","map","select","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,6BAApC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB;AACA,QAAMC,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,KAA9B,CAAzB,CAHqB,CAIrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AACzB;AAEA,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,KAAvB,EAA8B;AAC1B,YAAMC,mBAAmB,GAAG,EAA5B;AACAX,MAAAA,KAAK,CAACY,QAAN,CAAeX,UAAU,CAACU,mBAAD,CAAzB;AAEH,KAJD,MAKK;AACD,YAAME,cAAc,GAAGT,KAAK,CAACU,IAAN,CAAYC,QAAD,IAAcA,QAAQ,CAACC,MAAT,KAAoBR,CAAC,CAACC,MAAF,CAASC,KAAtD,CAAvB;AACAV,MAAAA,KAAK,CAACY,QAAN,CAAeX,UAAU,CAACY,cAAD,CAAzB;AACH;;AAEDb,IAAAA,KAAK,CAACY,QAAN,CAAeV,OAAO,EAAtB;AACH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,QAAQ,EAAGM,CAAD,IAAOD,gBAAgB,CAACC,CAAD,CAAzC;AAAA,oCACI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKJ,KAAK,IAAIA,KAAK,CAACa,GAAN,CAAWC,MAAD,IAAY;AAC5B,kCACI;AAAQ,gBAAA,KAAK,EAAEA,MAAM,CAACF,MAAtB;AAAA,0BACKE,MAAM,CAACF;AADZ,iBAAmCE,MAAM,CAACC,GAA1C;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aANS,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAtDD;;GAAMhB,U;UAGYJ,W;;;KAHZI,U;AAwDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { store } from '../store';\nimport { choiceUser, getUser } from '../store/actions/UserAction';\n\nconst SelectUser = () => {\n\n    // on recupere les data de notre store \n    const users = useSelector((state) => state.userReducer.users);\n    // console.log(\"state user \", users);\n\n    // Fonction pour mapper le select en fonction du store users trié par ordre alphabétique sur pseudo\n    // const selects = [];\n    // if (users.length > 0) {\n    //     users.map((user) => selects.push(user));\n    //     selects.sort(function (a, b) {\n    //         return a.pseudo - b.pseudo;\n    //     });\n    // }   \n    // console.log(select);\n\n    // fonction qui recupere l'objet du user lors du choix du select\n    function handleChangeUser(e) {\n        // console.log(\"Selected!!\", e.target.value);;\n\n        if (e.target.value === \"all\") {\n            const dataChoiceUserEmpty = \"\"\n            store.dispatch(choiceUser(dataChoiceUserEmpty));\n\n        }\n        else {\n            const dataChoiceUser = users.find((userFind) => userFind.pseudo === e.target.value);\n            store.dispatch(choiceUser(dataChoiceUser));\n        }\n\n        store.dispatch(getUser())\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <div className=\"userChoice\">\n                    <div>\n                        <h3>Choisir user:</h3>\n                        <select onChange={(e) => handleChangeUser(e)}>\n                            <option value=\"all\">All</option>\n                            {users && users.map((select) => {\n                                return (\n                                    <option value={select.pseudo} key={select._id}>\n                                        {select.pseudo}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectUser;"]},"metadata":{},"sourceType":"module"}