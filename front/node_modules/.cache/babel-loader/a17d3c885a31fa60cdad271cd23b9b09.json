{"ast":null,"code":"var _jsxFileName = \"/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/SelectUser.js\";\nimport React from 'react';\nimport { store } from '../store';\nimport { choiceUser } from '../store/actions/UserAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectUser = props => {\n  const {\n    users\n  } = props; // on recupere les data de notre store au niveau du post reducer\n\n  console.log(\"state users component selectUser  \", users); // Fonction pour mapper le select en fonction du store users trié par ordre alphabétique sur pseudo\n  // const selects = [];\n  // if (users.length > 0) {\n  //     users.map((user) => selects.push(user));\n  //     selects.sort(function (a, b) {\n  //         return a.pseudo - b.pseudo;\n  //     });\n  // }   \n  // console.log(select);\n  // fonction qui recupere l'objet du user lors du choix du select\n\n  function handleChangeUser(e) {\n    // console.log(\"Selected!!\", e.target.value);;\n    if (e.target.value === \"all\") {\n      const dataChoiceUserEmpty = \"\";\n      store.dispatch(choiceUser(dataChoiceUserEmpty));\n    } else {\n      const dataChoiceUser = users.find(userFind => userFind.pseudo === e.target.value);\n      store.dispatch(choiceUser(dataChoiceUser));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChoice\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choisir user:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => handleChangeUser(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), users && users.sort(function (a, b) {\n              return b.pseudo - a.pseudo;\n            }).map(select => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: select.pseudo,\n                children: select.pseudo\n              }, select._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SelectUser;\nexport default SelectUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectUser\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/SelectUser.js"],"names":["React","store","choiceUser","SelectUser","props","users","console","log","handleChangeUser","e","target","value","dataChoiceUserEmpty","dispatch","dataChoiceUser","find","userFind","pseudo","sort","a","b","map","select","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB,CAD0B,CAE1B;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,KAAlD,EAH0B,CAK1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AACzB;AAEA,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,KAAvB,EAA8B;AAC1B,YAAMC,mBAAmB,GAAG,EAA5B;AACAX,MAAAA,KAAK,CAACY,QAAN,CAAeX,UAAU,CAACU,mBAAD,CAAzB;AACH,KAHD,MAIK;AACD,YAAME,cAAc,GAAGT,KAAK,CAACU,IAAN,CAAYC,QAAD,IAAcA,QAAQ,CAACC,MAAT,KAAoBR,CAAC,CAACC,MAAF,CAASC,KAAtD,CAAvB;AACAV,MAAAA,KAAK,CAACY,QAAN,CAAeX,UAAU,CAACY,cAAD,CAAzB;AACH;AACJ;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,QAAQ,EAAGL,CAAD,IAAOD,gBAAgB,CAACC,CAAD,CAAzC;AAAA,oCACI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKJ,KAAK,IAAIA,KAAK,CAACa,IAAN,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACjC,qBAAOA,CAAC,CAACH,MAAF,GAAWE,CAAC,CAACF,MAApB;AACH,aAFS,EAEPI,GAFO,CAEFC,MAAD,IAAY;AACf,kCACI;AAAQ,gBAAA,KAAK,EAAEA,MAAM,CAACL,MAAtB;AAAA,0BACKK,MAAM,CAACL;AADZ,iBAAmCK,MAAM,CAACC,GAA1C;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aARS,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CApDD;;KAAMpB,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { store } from '../store';\nimport { choiceUser } from '../store/actions/UserAction';\n\nconst SelectUser = (props) => {\n    const { users } = props;\n    // on recupere les data de notre store au niveau du post reducer\n    console.log(\"state users component selectUser  \", users);\n\n    // Fonction pour mapper le select en fonction du store users trié par ordre alphabétique sur pseudo\n    // const selects = [];\n    // if (users.length > 0) {\n    //     users.map((user) => selects.push(user));\n    //     selects.sort(function (a, b) {\n    //         return a.pseudo - b.pseudo;\n    //     });\n    // }   \n    // console.log(select);\n\n    // fonction qui recupere l'objet du user lors du choix du select\n    function handleChangeUser(e) {\n        // console.log(\"Selected!!\", e.target.value);;\n\n        if (e.target.value === \"all\") {\n            const dataChoiceUserEmpty = \"\"\n            store.dispatch(choiceUser(dataChoiceUserEmpty));\n        }\n        else {\n            const dataChoiceUser = users.find((userFind) => userFind.pseudo === e.target.value);\n            store.dispatch(choiceUser(dataChoiceUser));\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <div className=\"userChoice\">\n                    <div>\n                        <h3>Choisir user:</h3>\n                        <select onChange={(e) => handleChangeUser(e)}>\n                            <option value=\"all\">All</option>\n                            {users && users.sort(function (a, b) {\n                                return b.pseudo - a.pseudo;\n                            }).map((select) => {\n                                return (\n                                    <option value={select.pseudo} key={select._id}>\n                                        {select.pseudo}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectUser;"]},"metadata":{},"sourceType":"module"}