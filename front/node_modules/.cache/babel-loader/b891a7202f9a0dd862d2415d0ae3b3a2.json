{"ast":null,"code":"var _jsxFileName = \"/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { editPosts, deletePost } from \"../store/actions/PostAction\";\nimport Like from \"./Like\";\nimport { store } from \"../store\"; // import la fonction isEmpty dans le fichier utils.js\n\nimport { datePaser } from \"./Utils\";\nimport { useSelector } from \"react-redux\"; // import Swal from 'sweetalert2'\n// import withReactContent from 'sweetalert2-react-content'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const {\n    post,\n    index\n  } = props; // on recupere les data de notre store \n\n  const userChoice = useSelector(state => state.userReducer.choiceUser); // console.log(\"state choiceUser\", userChoice);\n\n  const message = useSelector(state => state.postReducer.flashs); // console.log(\"state message\", message)\n  // const [editSalert, setEditSalert] = useState(message);\n  // console.log(\"state message1\", editSalert)\n\n  const [editToggle, setEditToggle] = useState(false);\n  const [editContent, setEditContent] = useState(post.content); //  console.log(\"userChoice post \" ,userChoice.pseudo)\n  // const user = useSelector((state) => state.userReducer);\n  // dispatch les action\n\n  const handleEdit = e => {\n    e.preventDefault(); //important il faut remettre tout les champs de la data autrement il serait ecraser par un champ vide\n\n    const postData = {\n      title: post.title,\n      author: userChoice.pseudo,\n      content: editContent,\n      likes: post.likes,\n      id: post._id\n    }; // console.log(postData)\n\n    store.dispatch(editPosts(postData));\n    setEditToggle(false);\n  };\n\n  const handleDel = e => {\n    if (window.confirm(\"Voulez vous supprimer cet article\")) {\n      store.dispatch(deletePost(post._id));\n    }\n  }; // console.log(\"userChoice \" ,userChoice.pseudo)\n  // console.log(\"postAuthor \" ,post.author)\n  // if (editSalert) {\n  //   const MySwal = withReactContent(Swal)\n  //   MySwal.fire({\n  //     title: <strong>{editSalert}</strong>,\n  //     icon: 'info',\n  //     timer: 3000,\n  //     willClose: () => \n  //       setEditSalert(\"\")\n  //   })\n  //   // console.log(\"state message1\", editSalert)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [userChoice.pseudo === post.author && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setEditToggle(!editToggle),\n        src: \"./icons/edit.svg\",\n        alt: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleDel,\n        src: \"./icons/delete.svg\",\n        alt: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Article \", index === 0 ? null : index + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://picsum.photos/1500/400\",\n      className: \"post-img\",\n      alt: \"img-post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), editToggle ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleEdit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: post.content,\n        onChange: e => setEditContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"valider modification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Like, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", !post.updatedDateTimestamp ? \"Posté le \" + datePaser(post.createdDateTimestamp) : \"Posté le \" + datePaser(post.createdDateTimestamp) + \" (Modifié le \" + datePaser(post.updatedDateTimestamp) + \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"P5MmpAmDzi1tvaOlEOHlgciy21Q=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/Post.js"],"names":["React","useState","editPosts","deletePost","Like","store","datePaser","useSelector","Post","props","post","index","userChoice","state","userReducer","choiceUser","message","postReducer","flashs","editToggle","setEditToggle","editContent","setEditContent","content","handleEdit","e","preventDefault","postData","title","author","pseudo","likes","id","_id","dispatch","handleDel","window","confirm","target","value","updatedDateTimestamp","createdDateTimestamp"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { editPosts, deletePost } from \"../store/actions/PostAction\";\nimport Like from \"./Like\";\nimport { store } from \"../store\"\n\n// import la fonction isEmpty dans le fichier utils.js\nimport { datePaser } from \"./Utils\";\nimport { useSelector } from \"react-redux\";\n\n// import Swal from 'sweetalert2'\n// import withReactContent from 'sweetalert2-react-content'\n\nconst Post = (props) => {\n  const { post, index } = props;\n\n  // on recupere les data de notre store \n  const userChoice = useSelector((state) => state.userReducer.choiceUser);\n  // console.log(\"state choiceUser\", userChoice);\n  const message = useSelector((state) => state.postReducer.flashs);\n  // console.log(\"state message\", message)\n\n  // const [editSalert, setEditSalert] = useState(message);\n  // console.log(\"state message1\", editSalert)\n\n  const [editToggle, setEditToggle] = useState(false);\n  const [editContent, setEditContent] = useState(post.content);\n\n  //  console.log(\"userChoice post \" ,userChoice.pseudo)\n  // const user = useSelector((state) => state.userReducer);\n\n  // dispatch les action\n  const handleEdit = (e) => {\n    e.preventDefault();\n\n    //important il faut remettre tout les champs de la data autrement il serait ecraser par un champ vide\n    const postData = {\n      title: post.title,\n      author: userChoice.pseudo,\n      content: editContent,\n      likes: post.likes,\n      id: post._id,\n    };\n\n    // console.log(postData)\n    store.dispatch(editPosts(postData));\n    setEditToggle(false);\n  };\n\n  const handleDel = (e) => {\n    if (window.confirm(\"Voulez vous supprimer cet article\")) {\n      store.dispatch(deletePost(post._id));\n    }\n  };\n\n  // console.log(\"userChoice \" ,userChoice.pseudo)\n  // console.log(\"postAuthor \" ,post.author)\n\n  // if (editSalert) {\n  //   const MySwal = withReactContent(Swal)\n  //   MySwal.fire({\n  //     title: <strong>{editSalert}</strong>,\n  //     icon: 'info',\n  //     timer: 3000,\n  //     willClose: () => \n  //       setEditSalert(\"\")\n  //   })\n\n  //   // console.log(\"state message1\", editSalert)\n    \n  // }\n\n  return (\n    <div className=\"post\">\n      {userChoice.pseudo === post.author && (\n        <div>\n          {/* ici setEditiongToggle prend l'inverse de editToggle */}\n          {/* si editToggle est à true, setEditToggle passe à false et inversement */}\n          <img\n            onClick={() => setEditToggle(!editToggle)}\n            src=\"./icons/edit.svg\"\n            alt=\"edit\"\n          />\n          <img onClick={handleDel} src=\"./icons/delete.svg\" alt=\"del\" />\n        </div>\n      )}\n      <h2>Article {index === 0 ? null : index + 1}</h2>\n      <h3>{post.title}</h3>\n      <img\n        src=\"https://picsum.photos/1500/400\"\n        className=\"post-img\"\n        alt=\"img-post\"\n      />\n      {editToggle ? (\n        <form onSubmit={(e) => handleEdit(e)}>\n          <textarea\n            defaultValue={post.content}\n            onChange={(e) => setEditContent(e.target.value)}\n          ></textarea>\n          <input type=\"submit\" value=\"valider modification\" />\n        </form>\n      ) : (\n        <p>{post.content}</p>\n      )}\n\n      <div className=\"author\">\n        <h5>{post.author}</h5>\n        <Like post={post} />\n      </div>\n\n      <div className=\"date\">\n        <h5> {!post.updatedDateTimestamp ? \"Posté le \" + datePaser(post.createdDateTimestamp) : \"Posté le \" + datePaser(post.createdDateTimestamp) + \" (Modifié le \" + datePaser(post.updatedDateTimestamp) + \")\"}\n        </h5>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}