{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_LIKE, ADD_POST, DELETE_POST, EDIT_POST, GET_POST } from \"./ActionTypes\";\nexport const getPosts = () => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.get(\"http://localhost:3003/api/posts\").then(res => {\n      //  console.log(\"Action Get Post \" ,res)\n      // renvoi les data du type GET_POSTS pour notre exemple avec les data dans la reponse avec payload\n      //dispatch veut dire va dans les reducers via index.js de reducers\n      dispatch({\n        type: GET_POST,\n        payload: res.data.posts\n      }); // console.log(\"Action \" ,res.data.posts)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPosts = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios.post(\"http://localhost:3003/api/posts\", data).then(res => {\n      // console.log(\"Res Add Post \", res.data.posts);\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editPosts = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/posts/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_POST,\n        payload: res.data.posts\n      }); // console.log(\"data.posts Edit \" ,res.data.dataEdit)\n      // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    // console.log(\"postId Delete\", postId);\n    return axios({\n      method: \"delete\",\n      url: `http://localhost:3003/api/posts/${postId}`\n    }).then(res => {\n      console.log('res delete post', res.data);\n      dispatch({\n        type: DELETE_POST,\n        payload: res.data\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};\nexport const addLike = data => {\n  return dispatch => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/posts/${data.id}`,\n      data: { ...data\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_LIKE,\n        payload: res.data\n      }); // si ne fonctionne pas alors console err\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/actions/PostAction.js"],"names":["axios","ADD_LIKE","ADD_POST","DELETE_POST","EDIT_POST","GET_POST","getPosts","dispatch","get","then","res","type","payload","data","posts","catch","err","console","log","addPosts","post","editPosts","method","url","id","deletePost","postId","addLike"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {ADD_LIKE, ADD_POST, DELETE_POST, EDIT_POST, GET_POST } from \"./ActionTypes\";\n\nexport const getPosts = () => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .get(\"http://localhost:3003/api/posts\")\n      .then((res) => {\n        //  console.log(\"Action Get Post \" ,res)\n        // renvoi les data du type GET_POSTS pour notre exemple avec les data dans la reponse avec payload\n        //dispatch veut dire va dans les reducers via index.js de reducers\n        dispatch({\n          type: GET_POST,\n          payload: res.data.posts,\n        });\n        // console.log(\"Action \" ,res.data.posts)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const addPosts = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios\n      .post(\"http://localhost:3003/api/posts\", data)\n      .then((res) => {\n        // console.log(\"Res Add Post \", res.data.posts);\n        dispatch({\n          type: ADD_POST,\n          payload: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const editPosts = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/posts/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        dispatch({\n          type: EDIT_POST,\n          payload: res.data.posts ,\n        });\n        // console.log(\"data.posts Edit \" ,res.data.dataEdit)\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const deletePost = (postId) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    // console.log(\"postId Delete\", postId);\n    return axios({\n      method: \"delete\",\n      url: `http://localhost:3003/api/posts/${postId}`,\n    })\n      .then((res) => {\n        console.log('res delete post', res.data)\n        dispatch({\n            type: DELETE_POST,\n            payload: res.data,\n          });\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const addLike = (data) => {\n  return (dispatch) => {\n    // ici on recupere les data dans la bases de données et on le tri par ordre decroissant via l'id\n    // voir dans doc axios\n    return axios({\n      method: \"put\",\n      url: `http://localhost:3003/api/posts/${data.id}`,\n      data: { ...data },\n    })\n      .then((res) => {\n        dispatch({\n          type: ADD_LIKE,\n          payload: res.data,\n        });\n        // si ne fonctionne pas alors console err\n      })\n      .catch((err) => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}