{"ast":null,"code":"import * as Actions from \"../actions/ActionTypes\";\nconst initialState = {\n  // users: [],\n  flashs: \"\",\n  choiceUser: []\n}; //se comporte comme un switch avec action\n\nexport default function UserReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //ici pour le cas GET_POSTS on retourne action.payload\n    // et par défaut la variable state qui est vide via initialSate\n    case Actions.GET_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    case Actions.ADD_USER_LIKE:\n      console.log(\"action.payload\", action.payload);\n      return { ...state,\n        users: action.payload\n      };\n\n    case Actions.ADD_USER:\n      // ... veut dire qu'on recupère tous le state\n      console.log(\"message reducer\");\n      return [action.payload, ...state];\n\n    case Actions.EDIT_USER:\n      return { ...state,\n        users: action.payload\n      };\n\n    case Actions.CHOICE_USER:\n      // console.log(\"CHOICE_USER \", state)\n      return { ...state,\n        choiceUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/store/reducers/UserReducer.js"],"names":["Actions","initialState","flashs","choiceUser","UserReducer","state","action","type","GET_USERS","users","payload","ADD_USER_LIKE","console","log","ADD_USER","EDIT_USER","CHOICE_USER"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB,C,CAMA;;AACA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA,SAAKP,OAAO,CAACQ,SAAb;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1B,OAAP;;AACF,SAAKV,OAAO,CAACW,aAAb;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAAM,CAACI,OAArC;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1B,OAAP;;AACF,SAAKV,OAAO,CAACc,QAAb;AACE;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO,CAACP,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAApB,CAAP;;AACF,SAAKL,OAAO,CAACe,SAAb;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1B,OAAP;;AACF,SAAKV,OAAO,CAACgB,WAAb;AACE;AACA,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACI;AAFd,OAAP;;AAKF;AACE,aAAOL,KAAP;AAtBJ;AAwBD;KAzBuBD,W","sourcesContent":["import * as Actions from \"../actions/ActionTypes\";\n\nconst initialState = {\n  // users: [],\n  flashs: \"\",\n  choiceUser: []\n};\n\n//se comporte comme un switch avec action\nexport default function UserReducer(state = initialState, action) {\n  switch (action.type) {\n    //ici pour le cas GET_POSTS on retourne action.payload\n    // et par défaut la variable state qui est vide via initialSate\n    case Actions.GET_USERS:\n      return { ...state, users: action.payload };\n    case Actions.ADD_USER_LIKE:\n      console.log(\"action.payload\", action.payload )\n      return { ...state, users: action.payload };\n    case Actions.ADD_USER:\n      // ... veut dire qu'on recupère tous le state\n      console.log(\"message reducer\")\n      return [action.payload, ...state];\n    case Actions.EDIT_USER:\n      return { ...state, users: action.payload }\n    case Actions.CHOICE_USER:\n      // console.log(\"CHOICE_USER \", state)\n      return {\n        ...state,\n        choiceUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}