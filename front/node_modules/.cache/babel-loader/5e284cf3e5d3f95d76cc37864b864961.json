{"ast":null,"code":"var _jsxFileName = \"/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { addPosts } from \"../store/actions/PostAction\";\nimport { store } from \"../store\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  // on recupere les data de notre store \n  const userChoice = useSelector(state => state.userReducer.choiceUser); // console.log(\"state choiceUser component PostForm\", userChoice);\n  // constante pour poster un nouveau article \n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\"); // ici la fonction est asynchrone pour poster un nouveau article\n\n  const handleForm = async e => {\n    //empeche le formunliare d'etre submiter\n    e.preventDefault(); // si tille et content n'est pas vide alors\n\n    if (title && content) {\n      const data = {\n        title,\n        content,\n        author: userChoice.pseudo\n      };\n      store.dispatch(addPosts(data));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleForm(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Titre du poste\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Postez vos pens\\xE9es...\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"WbcXC9yMQdH8nHs4bKznQaZqSWg=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/wil/Documents/Dev/gh/liwza/formation_Cda/front/src/components/PostForm.js"],"names":["React","useState","addPosts","store","useSelector","PostForm","userChoice","state","userReducer","choiceUser","title","setTitle","content","setContent","handleForm","e","preventDefault","data","author","pseudo","dispatch","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB;AACA,QAAMC,UAAU,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,UAA9B,CAA9B,CAHqB,CAIrB;AAGA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CATqB,CAYrB;;AACA,QAAMa,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9B;AACAA,IAAAA,CAAC,CAACC,cAAF,GAF8B,CAG9B;;AACA,QAAIN,KAAK,IAAIE,OAAb,EAAsB;AACpB,YAAMK,IAAI,GAAG;AACXP,QAAAA,KADW;AAEXE,QAAAA,OAFW;AAGXM,QAAAA,MAAM,EAAEZ,UAAU,CAACa;AAHR,OAAb;AAKAhB,MAAAA,KAAK,CAACiB,QAAN,CAAelB,QAAQ,CAACe,IAAD,CAAvB;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AAED;AACF,GAfD;;AAiBA,sBACE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAGE,CAAD,IAAOD,UAAU,CAACC,CAAD,CAAjC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,KAAK,EAAEL,KAHT;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,WAAW,EAAC,0BADd;AAEE,UAAA,KAAK,EAAEV,OAFT;AAGE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlDD;;GAAMjB,Q;UAGeD,W;;;KAHfC,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { addPosts } from \"../store/actions/PostAction\";\nimport { store } from \"../store\"\nimport { useSelector } from \"react-redux\";\n\nconst PostForm = () => {\n\n  // on recupere les data de notre store \n  const userChoice = useSelector((state) => state.userReducer.choiceUser);\n  // console.log(\"state choiceUser component PostForm\", userChoice);\n\n\n  // constante pour poster un nouveau article \n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n\n  // ici la fonction est asynchrone pour poster un nouveau article\n  const handleForm = async (e) => {\n    //empeche le formunliare d'etre submiter\n    e.preventDefault();\n    // si tille et content n'est pas vide alors\n    if (title && content) {\n      const data = {\n        title,\n        content,\n        author: userChoice.pseudo,\n      };\n      store.dispatch(addPosts(data))\n      setTitle(\"\");\n      setContent(\"\");\n\n    }\n  };\n\n  return (\n    <div>\n        <div className=\"form-container\">\n          <form onSubmit={(e) => handleForm(e)}>\n            <input\n              type=\"text\"\n              placeholder=\"Titre du poste\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <textarea\n              placeholder=\"Postez vos pensÃ©es...\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            ></textarea>\n            <input type=\"submit\" value=\"Envoyer\" />\n          </form>\n        </div>\n    </div>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}